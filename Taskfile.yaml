version: "3"
vars:
  SCRATCH_EDITOR_VERSION: v12.0.1
  DPRINT_VERSION: 0.48.0

tasks:
  install:
    cmds:
      - curl -fsSL https://dprint.dev/install.sh | sh -s {{ .DPRINT_VERSION }}
      - mkdir -p .bin && cp $HOME/.dprint/bin/dprint .bin/dprint # workaround for local install

  fmt:
    desc: Run format
    cmds:
      - ${PWD}/.bin/dprint fmt

  fmt:check:
    desc: Check format
    cmds:
      - ${PWD}/.bin/dprint check

  scratch:init:
    cmds:
      - rm -rf scratch-editor
      - git clone --depth 1 --branch {{ .SCRATCH_EDITOR_VERSION }}  https://github.com/scratchfoundation/scratch-editor.git
      - cd scratch-editor && npm install
      - cd scratch-editor && npm run build
      - task scratch:patch

  scratch:patch:
    cmds:
      - cd scratch-editor/packages/scratch-gui && node ../../../scratch-arduino-extensions/scripts/patch-gui.js

  scratch:local:start:
    dir: scratch-editor
    cmds:
      - npm start --workspace @scratch/scratch-gui

  app:build:
    desc: "Copy app files (python, assets, app.yaml) to a build directory"
    cmds:
      - mkdir -p build/scratch-arduino-app
      - cp ./app.yaml build/scratch-arduino-app/app.yaml
      - cp -r ./sketch/ build/scratch-arduino-app/sketch
      - cp -r ./python/ build/scratch-arduino-app/python
      # - task scratch:build
      # - mkdir -p build/scratch-arduino-app/assets
      # - cp scratch-editor/packages/scratch-gui/build/index.html build/scratch-arduino-app/assets/index.html
      # - cp scratch-editor/packages/scratch-gui/build/gui.js build/scratch-arduino-app/assets/gui.js
      # - mkdir -p build/scratch-arduino-app/assets/static
      # - cp -r scratch-editor/packages/scratch-gui/build/static/blocks-media  build/scratch-arduino-app/assets/static/blocks-media

  scratch:build:
    desc: "Build Scratch GUI files"
    dir: scratch-editor/packages/scratch-gui
    cmds:
      - npm run build:dev --workspace @scratch/scratch-gui

  board:app:upload:
    desc: "Upload zip file to Arduino board, unzip and deploy to /home/arduino/ArduinoApps"
    cmds:
      - task app:zip
      - |
          ZIP_FILE=$(ls -t build/scratch-arduino-app-*.zip 2>/dev/null | head -n1)
          if [ -z "$ZIP_FILE" ]; then
            echo "No zip file found. Run 'task app:zip' first."
            exit 1
          fi
          adb push "$ZIP_FILE" /tmp/
          ZIP_BASENAME=$(basename "$ZIP_FILE")
          adb shell "cd /tmp && unzip -o $ZIP_BASENAME && mkdir -p /home/arduino/ArduinoApps && rm -rf /home/arduino/ArduinoApps/scratch-arduino-app && mv scratch-arduino-app /home/arduino/ArduinoApps/ && rm $ZIP_BASENAME"
          echo "App deployed to /home/arduino/ArduinoApps/scratch-arduino-app"

  app:zip:
    desc: "Create a zip file with version (defaults to git commit hash)"
    vars:
      APP_VERSION:
        sh: echo "${APP_VERSION:-$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')}"
    cmds:
      - |
          if [ ! -d "build/scratch-arduino-app" ]; then
            echo "Build folder does not exist. Run 'task app:build' first."
            exit 1
          fi
      - echo "Creating zip with version {{.APP_VERSION}}"
      - cd build && zip -r scratch-arduino-app-{{.APP_VERSION}}.zip scratch-arduino-app && cd ..
